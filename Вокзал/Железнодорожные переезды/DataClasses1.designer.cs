#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Железнодорожные_переезды
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Автовокзал")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertБилет(Билет instance);
    partial void UpdateБилет(Билет instance);
    partial void DeleteБилет(Билет instance);
    partial void InsertМаршрут(Маршрут instance);
    partial void UpdateМаршрут(Маршрут instance);
    partial void DeleteМаршрут(Маршрут instance);
    partial void InsertВокзал(Вокзал instance);
    partial void UpdateВокзал(Вокзал instance);
    partial void DeleteВокзал(Вокзал instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Железнодорожные_переезды.Properties.Settings.Default.АвтовокзалConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Билет> Билет
		{
			get
			{
				return this.GetTable<Билет>();
			}
		}
		
		public System.Data.Linq.Table<Маршрут> Маршрут
		{
			get
			{
				return this.GetTable<Маршрут>();
			}
		}
		
		public System.Data.Linq.Table<Вокзал> Вокзал
		{
			get
			{
				return this.GetTable<Вокзал>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Билет")]
	public partial class Билет : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Номер_билета;
		
		private int _Номер_маршрута;
		
		private string _Место_отправления;
		
		private string _Место_прибытия;
		
		private string _ФИО_пассажира;
		
		private System.DateTime _Дата_отправления;
		
		private int _Номер_места;
		
		private EntityRef<Маршрут> _Маршрут;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnНомер_билетаChanging(int value);
    partial void OnНомер_билетаChanged();
    partial void OnНомер_маршрутаChanging(int value);
    partial void OnНомер_маршрутаChanged();
    partial void OnМесто_отправленияChanging(string value);
    partial void OnМесто_отправленияChanged();
    partial void OnМесто_прибытияChanging(string value);
    partial void OnМесто_прибытияChanged();
    partial void OnФИО_пассажираChanging(string value);
    partial void OnФИО_пассажираChanged();
    partial void OnДата_отправленияChanging(System.DateTime value);
    partial void OnДата_отправленияChanged();
    partial void OnНомер_местаChanging(int value);
    partial void OnНомер_местаChanged();
    #endregion
		
		public Билет()
		{
			this._Маршрут = default(EntityRef<Маршрут>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Номер_билета", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Номер_билета
		{
			get
			{
				return this._Номер_билета;
			}
			set
			{
				if ((this._Номер_билета != value))
				{
					this.OnНомер_билетаChanging(value);
					this.SendPropertyChanging();
					this._Номер_билета = value;
					this.SendPropertyChanged("Номер_билета");
					this.OnНомер_билетаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Номер_маршрута", DbType="Int NOT NULL")]
		public int Номер_маршрута
		{
			get
			{
				return this._Номер_маршрута;
			}
			set
			{
				if ((this._Номер_маршрута != value))
				{
					if (this._Маршрут.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnНомер_маршрутаChanging(value);
					this.SendPropertyChanging();
					this._Номер_маршрута = value;
					this.SendPropertyChanged("Номер_маршрута");
					this.OnНомер_маршрутаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Место_отправления", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string Место_отправления
		{
			get
			{
				return this._Место_отправления;
			}
			set
			{
				if ((this._Место_отправления != value))
				{
					this.OnМесто_отправленияChanging(value);
					this.SendPropertyChanging();
					this._Место_отправления = value;
					this.SendPropertyChanged("Место_отправления");
					this.OnМесто_отправленияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Место_прибытия", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string Место_прибытия
		{
			get
			{
				return this._Место_прибытия;
			}
			set
			{
				if ((this._Место_прибытия != value))
				{
					this.OnМесто_прибытияChanging(value);
					this.SendPropertyChanging();
					this._Место_прибытия = value;
					this.SendPropertyChanged("Место_прибытия");
					this.OnМесто_прибытияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ФИО_пассажира", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string ФИО_пассажира
		{
			get
			{
				return this._ФИО_пассажира;
			}
			set
			{
				if ((this._ФИО_пассажира != value))
				{
					this.OnФИО_пассажираChanging(value);
					this.SendPropertyChanging();
					this._ФИО_пассажира = value;
					this.SendPropertyChanged("ФИО_пассажира");
					this.OnФИО_пассажираChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дата_отправления", DbType="DateTime NOT NULL")]
		public System.DateTime Дата_отправления
		{
			get
			{
				return this._Дата_отправления;
			}
			set
			{
				if ((this._Дата_отправления != value))
				{
					this.OnДата_отправленияChanging(value);
					this.SendPropertyChanging();
					this._Дата_отправления = value;
					this.SendPropertyChanged("Дата_отправления");
					this.OnДата_отправленияChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Номер_места", DbType="Int NOT NULL")]
		public int Номер_места
		{
			get
			{
				return this._Номер_места;
			}
			set
			{
				if ((this._Номер_места != value))
				{
					this.OnНомер_местаChanging(value);
					this.SendPropertyChanging();
					this._Номер_места = value;
					this.SendPropertyChanged("Номер_места");
					this.OnНомер_местаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Маршрут_Билет", Storage="_Маршрут", ThisKey="Номер_маршрута", OtherKey="Номер_маршрута", IsForeignKey=true)]
		public Маршрут Маршрут
		{
			get
			{
				return this._Маршрут.Entity;
			}
			set
			{
				Маршрут previousValue = this._Маршрут.Entity;
				if (((previousValue != value) 
							|| (this._Маршрут.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Маршрут.Entity = null;
						previousValue.Билет.Remove(this);
					}
					this._Маршрут.Entity = value;
					if ((value != null))
					{
						value.Билет.Add(this);
						this._Номер_маршрута = value.Номер_маршрута;
					}
					else
					{
						this._Номер_маршрута = default(int);
					}
					this.SendPropertyChanged("Маршрут");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Маршрут")]
	public partial class Маршрут : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Номер_маршрута;
		
		private string _Путь;
		
		private EntitySet<Билет> _Билет;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnНомер_маршрутаChanging(int value);
    partial void OnНомер_маршрутаChanged();
    partial void OnПутьChanging(string value);
    partial void OnПутьChanged();
    #endregion
		
		public Маршрут()
		{
			this._Билет = new EntitySet<Билет>(new Action<Билет>(this.attach_Билет), new Action<Билет>(this.detach_Билет));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Номер_маршрута", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Номер_маршрута
		{
			get
			{
				return this._Номер_маршрута;
			}
			set
			{
				if ((this._Номер_маршрута != value))
				{
					this.OnНомер_маршрутаChanging(value);
					this.SendPropertyChanging();
					this._Номер_маршрута = value;
					this.SendPropertyChanged("Номер_маршрута");
					this.OnНомер_маршрутаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Путь", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Путь
		{
			get
			{
				return this._Путь;
			}
			set
			{
				if ((this._Путь != value))
				{
					this.OnПутьChanging(value);
					this.SendPropertyChanging();
					this._Путь = value;
					this.SendPropertyChanged("Путь");
					this.OnПутьChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Маршрут_Билет", Storage="_Билет", ThisKey="Номер_маршрута", OtherKey="Номер_маршрута")]
		public EntitySet<Билет> Билет
		{
			get
			{
				return this._Билет;
			}
			set
			{
				this._Билет.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Билет(Билет entity)
		{
			this.SendPropertyChanging();
			entity.Маршрут = this;
		}
		
		private void detach_Билет(Билет entity)
		{
			this.SendPropertyChanging();
			entity.Маршрут = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Вокзал")]
	public partial class Вокзал : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_вокзала;
		
		private string _Город;
		
		private string _Название;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_вокзалаChanging(int value);
    partial void OnID_вокзалаChanged();
    partial void OnГородChanging(string value);
    partial void OnГородChanged();
    partial void OnНазваниеChanging(string value);
    partial void OnНазваниеChanged();
    #endregion
		
		public Вокзал()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_вокзала", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_вокзала
		{
			get
			{
				return this._ID_вокзала;
			}
			set
			{
				if ((this._ID_вокзала != value))
				{
					this.OnID_вокзалаChanging(value);
					this.SendPropertyChanging();
					this._ID_вокзала = value;
					this.SendPropertyChanged("ID_вокзала");
					this.OnID_вокзалаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Город", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Город
		{
			get
			{
				return this._Город;
			}
			set
			{
				if ((this._Город != value))
				{
					this.OnГородChanging(value);
					this.SendPropertyChanging();
					this._Город = value;
					this.SendPropertyChanged("Город");
					this.OnГородChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Название", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Название
		{
			get
			{
				return this._Название;
			}
			set
			{
				if ((this._Название != value))
				{
					this.OnНазваниеChanging(value);
					this.SendPropertyChanging();
					this._Название = value;
					this.SendPropertyChanged("Название");
					this.OnНазваниеChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
